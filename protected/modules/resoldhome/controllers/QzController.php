<?php
/**
 * 求租
 * User: jt
 * Date: 2016/11/1 8:57
 */

class QzController extends ResoldHomeController{

    public $title;

    public $category;

    public function beforeAction($action)
    {
        $this->category = isset($_GET['type']) && in_array($_GET['type'],array('1','2','3')) ? $_GET['type'] : 1;
        $this->title = Yii::app()->params['category'][$this->category];
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $kw 关键字
     * @param string $area 区域
     * @param string $price 租金
     * @param string $bedroom 户型
     * @param string $way 整租/合租
     * @param string $cate 商铺/写字楼类型
     * @param string $size 面积
     * @param string $minprice 最少租金
     * @param string $maxprice 最大租金
     * @param string $minsize 最少面积
     * @param string $maxsize 最大面积
     * @param string $pt 配套
     */
    public function actionIndex($sort='',$kw='',$area='',$street='',$price='',$bedroom='',$way='',$cate='',$size='',$minprice='',$maxprice='',$minsize='',$maxsize='',$zx='',$pt=''){
        $kw=$this->cleanXss($kw);
        $xs = Yii::app()->search->house_qz;
        $xs->setQuery($kw);
        $xs->setFacets(array('status'), true);//分面统计
        $xs->addRange('deleted',0,0); //是否删除
        $xs->addQueryString('status:1',XS_CMD_QUERY_OP_AND);
        $xs->addQueryString('category:'.$this->category,XS_CMD_QUERY_OP_AND);
//        $xs->addRange('category',$category,$category);
        $tags = $this->getAllTag();
        $all_tag = array();
        foreach ($tags as $key=>$tag){
            foreach ($tag as $el){
                $all_tag[$key][$el['id']] = $el;
            }
        }
        $condition = array();
        if($kw){
            $condition = array_merge($condition,array('kw'=>$kw));
        }
        //区域
        if($area || $street){
            if(($selectedArea = AreaExt::model()->findByPk($area)) &&  $selectedArea->getIsFirstLevel()) {
                $xs->addQueryString('area:' . $selectedArea->id, XS_CMD_QUERY_OP_AND);
                $condition = array_merge($condition,array('area'=>$selectedArea->name));
            }
            if(($selectedStreet = AreaExt::model()->findByPk($street)) && $selectedArea = $selectedStreet->getParentArea()) {
                $xs->addQueryString('street:'.$selectedStreet->id,XS_CMD_QUERY_OP_AND);
                $condition = array_merge($condition,array('area'=>$selectedArea->name,'street'=>$selectedStreet->name));
            }
        }
        //价格
        if($price || $minprice || $maxprice){
            $price_tag = array();
            if($price) {
                if(isset($all_tag[ResoldQzExt::$price_cate[$this->category]][$price])){
                    $price_tag = $all_tag[ResoldQzExt::$price_cate[$this->category]][$price];
                }
            }else{
                $price_tag = array('min'=>$minprice ,'max'=>$maxprice);
            }
            if($price_tag){
                if($price_tag['min'] > 0 && $price_tag['max'] > 0){
                    $price_tag['max'] >= $price_tag['min'] ? $xs->addRange('price',$price_tag['min'] , $price_tag['max']) : $xs->addRange('price',null,$price_tag['max']);
                }else{
                    $price_tag['min'] > 0 ? $xs->addRange('price',$price_tag['min'] , null) : $xs->addRange('price',null,$price_tag['max']);
                }
                if(isset($price_tag['id'])){
                    $condition = array_merge($condition,array('price'=>$price_tag['name']));
                }
            }
        }
        //户型
        if($bedroom && $this->category == 1) {
            if (isset($all_tag['resoldhuxing'][$bedroom]) && $hxTag = $all_tag['resoldhuxing'][$bedroom]) {
                $xs->addQueryString('resoldhuxing:'.$hxTag['id'],XS_CMD_QUERY_OP_AND);
                $condition = array_merge($condition,array('bedroom'=>$hxTag['name']));
            }
        }
        //方式
        if($way && $this->category == 1){
            if(isset($all_tag['zfmode'][$way]) && $way_tag = $all_tag['zfmode'][$way]){
                $xs->addQueryString('rent_type:'.$way_tag['id'],XS_CMD_QUERY_OP_AND);
                $condition = array_merge($condition,array('way'=>$way_tag['name']));
            }
        }
        //类型
        if($cate && ($this->category == 2 || $this->category == 3)){
            if(isset($all_tag['esfzfsptype'][$cate]) && $cate_tag = $all_tag['esfzfsptype'][$cate]){
                $xs->addQueryString('esfzfsptype:'.$cate_tag['id'],XS_CMD_QUERY_OP_AND);
                $condition = array_merge($condition,array('cate'=>$cate_tag['name']));
            }
        }
        //面积
        if($size  || $minsize || $maxsize){
            $size_tag = array();
            if($size) {
                if (isset($all_tag[ResoldQzExt::$size_cate[$this->category]][$size])) {
                    $size_tag = $all_tag[ResoldQzExt::$size_cate[$this->category]][$size];
                }
            }else{
                $size_tag = array('min'=>$minsize, 'max'=>$maxsize);
            }
            if($size_tag){
                if($size_tag['min'] > 0 && $size_tag['max'] > 0){
                    $size_tag['max'] >= $size_tag['min'] ? $xs->addRange('size',$size_tag['min'] , $size_tag['max']) : $xs->addRange('size',null,$size_tag['max']);
                }else{
                    $size_tag['min'] > 0 ? $xs->addRange('size',$size_tag['min'] , null) : $xs->addRange('size',null,$size_tag['max']);
                }
                if(!isset($size_tag['id'])){
                    if($size_tag['min'] && $size_tag['max']){
                        $size_tag['name'] = $size_tag['min'].'-'.$size_tag['max'].'平米';
                    }elseif($size_tag['min']){
                        $size_tag['name'] = $size_tag['min'].'平米以上';
                    }elseif($size_tag['max']){
                        $size_tag['name'] = $size_tag['max'].'平米以下';
                    }
                }
                $condition = array_merge($condition,array('size'=>$size_tag['name']));
            }
        }

        $zx_name = '装修';
        //装修
        if($zx){
            if(isset($all_tag['resoldzx'][$zx]) && $zx_tag = $all_tag['resoldzx'][$zx]){
                $zx_name = $zx_tag['name'];
                $xs->addQueryString('decoration:'.$zx_tag['id'],XS_CMD_QUERY_OP_AND);
                $condition = array_merge($condition,array('zx'=>$zx_name));
            }
        }

        $pt_name = '配套设施';
        //配套设施
        if($pt){
            if(isset($all_tag[ResoldQzExt::$pt_cate[$this->category]][$pt]) && $pt_tag = $all_tag[ResoldQzExt::$pt_cate[$this->category]][$pt]){
                $pt_name = $pt_tag['name'];
                $xs->addQueryString('decoration:'.$pt_tag['id'],XS_CMD_QUERY_OP_AND);
                $condition = array_merge($condition,array('pt'=>$pt_name));
            }
        }
        $xs->setSort('updated');
        $criteria = new CDbCriteria(array(
            'order'=>'t.updated desc',
            'with'=>array('areaInfo')
        ));
        //排序
        if($sort){
            if($sort == '1'){
                $xs->setSort('created');
                $criteria->order = 't.created desc';
            }
            if($sort == '3'){
                $xs->setSort('price',true);
                $criteria->order = 't.price asc';
            }
            if($sort == '2'){
                $xs->setSort('price');
                $criteria->order = 't.price desc';
            }
        }

        $count = 0;
        $list = $xs->search();
        $count = array_sum($xs->getFacets('status'));//通过获取分面搜索值能得到精准数量
        $pager = new CPagination($count);
        $xs->setLimit(10, 10*$pager->currentPage);
        $docs = $xs->search();
        $ids = array();
        if($docs){
            foreach ($docs as $k=>$v) {
                $ids[] = $v->id;
            }
        }
        $criteria->addInCondition('t.id',$ids);
        $data = ResoldQzExt::model()->findAll($criteria);
        foreach ($data as $item){
            $item->created = date('Y-m-d H:i',$item->created);
            $item->data_conf = json_decode($item->data_conf,true);
        }
        $params = array(
            'area'=>$area,
            'street'=>$street,
            'price'=>$price,
            'bedroom'=>$bedroom,
            'way'=>$way,
            'size'=>$size,
            'cate'=>$cate,
            'zx'=>$zx,
            'pt'=>$pt,
            'minprice'=>$minprice,
            'maxprice'=>$maxprice,
            'minsize'=>$minsize,
            'maxsize'=>$maxsize,
            'type'=>$this->category,
            'sort'=>$sort
        );
        $this->render('index',array(
            'list'=>$data,
            'pager'=>$pager,
            'all_tag'=>$all_tag,
            'params'=>$params,
            'zx_name'=>$zx_name,
            'pt_name'=>$pt_name,
            'condition'=>$condition
        ));
    }

    public function actionDetail($id){
        $resold_qz = ResoldQzExt::model()->enabled()->undeleted()->with('areaInfo','streetInfo')->findByPk($id,'category=:cate',array(':cate'=>$this->category));
        if(!$resold_qz)
            throw new CHttpException(404,'找不到求租');
        $resold_qz->hits = $resold_qz->hits + 1;
        $resold_qz->save();
        $all_tag = $this->allTag;
        $zx = '暂无';
        foreach ($all_tag['resoldzx'] as $item) {
            if($item['id'] == $resold_qz->decoration){
                $zx = $item['name'];
            }
        }
        $resold_qz->decoration = $zx;
        $rent_type = '暂无';
        foreach ($all_tag['zfmode'] as $mode){
            if($mode['id'] == $resold_qz->rent_type){
                $rent_type = $mode['name'];
            }
        }
        $resold_qz->rent_type = $rent_type;
        $tag_array = array();
        if($resold_qz->data_conf){
            $resold_qz->data_conf = json_decode($resold_qz->data_conf,true);
            foreach ($resold_qz->data_conf as $key => $value) {
                    if(isset($all_tag[$key])){
                        foreach ($all_tag[$key] as $el){
                            if(is_array($value) && in_array($el['id'],$value))
                                $tag_array[$key][] = $el['name'];
                            if(!is_array($value) && $el['id'] == $value)
                                $tag_array[$key] = $el['name'];
                        }
                    }
            }
        }
        $extend_plot = '';
        if($resold_qz->hid){
            $resold_qz->hid = json_decode($resold_qz->hid,true);
            $plots = PlotExt::model()->findAllByAttributes(array('id'=>$resold_qz->hid));
            $extend_plot_array = array();
            foreach ($plots as $plot){
                $extend_plot_array[] = $plot->title;
            }
            $extend_plot = implode(" , ",$extend_plot_array);
        }
        $this->render('detail',array(
            'resold_qz'=>$resold_qz,
            'extend_plot'=>$extend_plot,
            'tags'=>$tag_array,
        ));
    }

}