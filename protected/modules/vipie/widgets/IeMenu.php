<?php
/**
 *
 * User: jt
 * Date: 2017/1/22 8:45
 */
Yii::import('zii.widgets.CMenu');
class IeMenu extends CMenu{

    public $activeCssClass = 'on';

    public $activateParents = true;

    public $activeParentCssClass = 'n1-hover n1-on';

    public function init()
    {
        $this->items = $this->owner->menu;
        if(!isset($this->submenuHtmlOptions['class'])){
            $this->submenuHtmlOptions['class']  = 'm-list sub-nav';

        }
        if(!isset($this->htmlOptions['class'])){
            $this->htmlOptions['class'] = 'm-list';
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    protected function renderMenuRecursive($items)
    {
        $count=0;
        $n=count($items);
        foreach($items as $item)
        {
            $count++;
            $options=isset($item['itemOptions']) ? $item['itemOptions'] : array();
            $class=array();
            if($item['active'] && $this->activeCssClass!='' && !isset($item['parent_active']))
                $class[]=$this->activeCssClass;
            if(isset($item['parent_active'])  && $this->activeParentCssClass!='')
                $class[]=$this->activeParentCssClass;
            if($count===1 && $this->firstItemCssClass!==null)
                $class[]=$this->firstItemCssClass;
            if($count===$n && $this->lastItemCssClass!==null)
                $class[]=$this->lastItemCssClass;
            if($this->itemCssClass!==null)
                $class[]=$this->itemCssClass;
            if($class!==array())
            {
                if(empty($options['class']))
                    $options['class']=implode(' ',$class);
                else
                    $options['class'].=' '.implode(' ',$class);
            }

            echo CHtml::openTag('li', $options);

            $menu=$this->renderMenuItem($item);
            if(isset($this->itemTemplate) || isset($item['template']))
            {
                $template=isset($item['template']) ? $item['template'] : $this->itemTemplate;
                echo strtr($template,array('{menu}'=>$menu));
            }
            else
                echo $menu;

            if(isset($item['items']) && count($item['items']))
            {
                echo "\n".CHtml::openTag('ul',isset($item['submenuOptions']) ? $item['submenuOptions'] : $this->submenuHtmlOptions)."\n";
                $this->renderMenuRecursive($item['items']);
                echo CHtml::closeTag('ul')."\n";
            }

            echo CHtml::closeTag('li')."\n";
        }
    }

    protected function normalizeItems($items,$route,&$active)
    {
        foreach($items as $i=>$item)
        {
            if(isset($item['visible']) && !$item['visible'])
            {
                unset($items[$i]);
                continue;
            }
            if(!isset($item['label']))
                $item['label']='';
            $encodeLabel = isset($item['encodeLabel']) ? $item['encodeLabel'] : $this->encodeLabel;
            if($encodeLabel)
                $items[$i]['label']=CHtml::encode($item['label']);
            $hasActiveChild=false;
            if(isset($item['items']))
            {
                $items[$i]['items']=$this->normalizeItems($item['items'],$route,$hasActiveChild);
                if(empty($items[$i]['items']) && $this->hideEmptyItems)
                {
                    unset($items[$i]['items']);
                    if(!isset($item['url']))
                    {
                        unset($items[$i]);
                        continue;
                    }
                }
            }
            if(!isset($item['active']))
            {
                if($this->activateParents && $hasActiveChild) {
                    $active = $items[$i]['active'] = $items[$i]['parent_active'] = true;
                }elseif($this->activateItems && $this->isItemActive($item,$route)) {
                    $active = $items[$i]['active'] = true;
                }else{
                        $items[$i]['active'] = false;
                }
            }
            elseif($item['active'])
                $active=true;
        }
        return array_values($items);
    }

}
